pack-info: "example pack" "example_pack" "ep" "Example pack used for debugging" true single; #Partial comment
#def hp:update;

#This will set up a simple scoreboard objective.
entity int score = 0;
#This will set up an objective, but accessible from anywhere (using "fake player" mechanics)
global int x = 1;
#All references to y will be replaced by a literal for the value in the datapack.
constant int y = 3;
#Literal string
constant string s = "hello";
#Variables that are not of type "int" will be stored as nbt.
global desc="variable description" string str = "Hi";
#Decimal precision specified in the diamond
entity float<2> f = 0.53f;
#Different Precision
constant float<1> fl = 0.5f;
#Use tags for entity arrays
global entity[] enemies = [@e[type=zombie], someones_username];
global entity e;

#require fake_pack;

"\"escaped string\" <--this should be part of that";
"#this is not a comment.";
single-line {this is a single-line statement};

#Run when the data pack is loaded or reloaded
on load {
  #Try calling the same function in different ways
  go();
  main.go();
  example_pack:main.go();

  #Insert a literal command into the datapack
  /say "example pack loaded!}";
};

#Priority setting to customize the order in which tick functions are called
priority=-1 on tick {
  comment("This comment will appear in the generated data pack.}");
  #execute clause - will execute as the nearest player
  as @p {
      #increments x by one for the player executed as
      x++;
  };
  
  #will execute if the literal command succeeds
  if (/literal command;) {
      /say "test passed";
      str = "hello";
  };
  
  at @p {
      #switch statement syntax
      switch (x) {
        case 1:
            /fill ~ ~ ~ stone;
        break;
      };
  };
};

#Add a listener for carrot on a sick use. Compatible with any editable scoreboard statistic.
id="used_c_stick" on used:carrot_on_a_stick {
    #For loop.
    for (i,1,5) {
        #"<i>" will be replaced by the current value of i.
        /say <i>;
    };
};

#Function
function desc="Start the game" go() {
    /say start;
};